
resize image
convert "input.jpg" -resize 500x500 -quality 100 "output.png"
!: force
convert "input.jpg" -resize 500x500! -quality 100 "output.png"

resize but keep the original ratio (this could make black bars)
ffmpeg -i kong2017.mp4    -vf "scale=w=trunc(ih*dar/2)*2:h=trunc(ih/2)*2, setsar=1/1, scale=w=3840:h=2160:force_original_aspect_ratio=1, pad=max(iw\,ih*(16/9)):ow/(16/9):(ow-iw)/2:(oh-ih)/2" -c:v libx264 -preset slow -tune film  -crf 20 -c:a aac -pix_fmt yuv420p -movflags +faststart output.mp4
##將2.4比例的Ultra 4K: 3840x1600轉成標準的4K: 3840x2160 (這裡會造成左右有黑邊）


extract frames in video file:
ffmpeg –i output_filename.avi –ss 00:00 –to 00:04 frame_%3d.png

ffmpeg -vcodec rawvideo -f rawvideo -pix_fmt rgb32 -s 320x480 -i fb0 -f image2 -vcodec png image.png



multimedia:

ref: ffmpeg/avconv 視訊音訊轉碼命令列工具
https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/629169/

ffmpeg

make mp4 video from bmp files
ffmpeg -framerate 60 -i img%03d.bmp -c:v libx264 -pix_fmt yuv420p -crf 0 output_60f.mp4
-crf 0: to create a lossless video

bluexxx.bmp:
ffmpeg -framerate 60 -i blue%03d.bmp -c:v libx264 -pix_fmt yuv420p -crf 0 output_60f.mp4


Repeat/loop Input Video with ffmpeg:
copy: https://video.stackexchange.com/questions/12905/repeat-loop-input-video-with-ffmpeg
This allows you to loop an input without needing to re-encode.

1. Make a text file. Contents of an example text file to repeat 4 times.

file 'input.mp4'
file 'input.mp4'
file 'input.mp4'
file 'input.mp4'
Then run ffmpeg:

2. ffmpeg -f concat -i list.txt -c copy output.mp4

ffmpeg -i output_filename.avi -ss 00:00 -to 00:04 frame_%3d.png

list.txt:
file 'output.mp4'
file 'output.mp4'
file 'output.mp4'
file 'output.mp4'
...








gst-launch-1.0 -v v4l2src device=/dev/video0 ! video/x-raw,format=YUY2 ! identity silent=false ! fakesink

gst-launch-1.0 -v v4l2src device=/dev/video1 ! video/x-raw,format=YUY2 ! identity silent=false ! fakesink

kill -2 $(pidof gst-launch-1.0)




gst-launch-1.0 -v v4l2src device=/dev/video0 ! "video/x-raw,width=1920,height=1080,framerate=30/1" ! fakesink &


x-bayer不能用!
gst-launch-1.0 -v v4l2src device=/dev/video0 ! "video/x-bayer,format=grbg,width=1920,height=1080,framerate=30/1" ! fakesink &




gst-launch-1.0 x-raw result:
Setting pipeline to PAUSED ...
Pipeline is live and does not need PREROLL ...
Setting pipeline to PLAYING ...
New clock: GstSystemClock
/GstPipeline:pipeline0/GstV4l2Src:v4l2src0.GstPad:src: caps = video/x-raw, width=(int)1920, height=(int)1080, frame[   66.240966] bypass csc
[   66.245701] input fmt YUV4
[   66.248426] output fmt YUYV
rate=(fraction)30/1, format=(string)YUY2, colorimetry=(string)bt709, interlace-mode=(string)progressive
/GstPipeline:pipeline0/GstCapsFilter:capsfilter0.GstPad:src: caps = video/x-raw, width=(int)1920, height=(int)1080, framerate=(fraction)30/1, format=(string)YUY2, colorimetry=(string)bt709, interlace-mode=(string)progressive
/GstPipeline:pipeline0/GstFakeSink:fakesink0.GstPad:sink: caps = video/x-raw, width=(int)1920, height=(int)1080, framerate=(fraction)30/1, format=(string)YUY2, colorimetry=(string)bt709, interlace-mode=(string)progressive
/GstPipeline:pipeline0/GstCapsFilter:capsfilter0.GstPad:sink: caps = video/x-raw, width=(int)1920, height=(int)1080, framerate=(fraction)30/1, format=(string)YUY2, colorimetry=(string)bt709, interlace-mode=(string)progressive
[   66.574336] Set rst_out_gpio(73) low (OV27XX_s_stream)
[   66.594617] Set isp_rst_gpio(72) low (OV27XX_s_stream)
[   66.599951] mxc-mipi-csi2-sam 32e40000.csi: Force bus freq high
