有人會看這vim文件????
ref: http://vimdoc.sourceforge.net/htmldoc/
ref: vi basic commands (Free Electrons Embedded Linux Experts)

Enter Command mode
[ESC]

Enter Insert mode
Inserts text after the cursor
a

Enter Insert mode
Append text at the end
A

Find keyword
/keyword_to_find
斜線改成問號變成往前找

Check next keyword
n

Check previous keyword
N

Search for the current word
*

Highlight search
:set hlsearch

Save/Write file
:w

Quit without save
:q!

Quit
:q

Quit and save
:x

Close all tabs
:qa

Delete the line
dd

Delete a word
dw

Undo
u

Redo
[Ctrl]+r

Move the cursor to the first non-white character in current line
^

Move the cursor to the line 0 (Biginning of the file)
:0
gg

Move the cursor to the last line (End of the file)
:$
G

Starts visual mode for selecting 
v
(開始使用^, v, <-, ->, home, end去選取文字)

承上的動作
Copy
y

承上的動作
Paste
p

Copy the whole line
yy

Move the cursor a word forward
w
非常像，移到字的結尾Move the cursor to the end a word
e

Delete the remainder of the line after the cursor
D

Copy from the cursor to the end of a word
yw

Deletes the word and enter Insert mode
ce

Join the current line with the next one
J

Search and replace
:%s/search_from/replace_to/gc
c: Prompt to user before each replacement

ref: http://linux.vbird.org/linux_basic/0310vi.php#vim_ws
:1,$s/word1/word2/g 	
從第一列到最後一列尋找 word1 字串，並將該字串取代為 word2 ！(常用)

:1,$s/word1/word2/gc 	
從第一列到最後一列尋找 word1 字串，並將該字串取代為 word2 ！
且在取代前顯示提示字元給使用者確認 (confirm) 是否需要取代！(常用)

diff by vim in shell
vi -d left_file.txt right_file.txt

Jump from one window to another
[ctrl]+w, w
先按組合鍵[ctrl]+w，再按一次w

Next difference
]c

Previous difference
[c

diff obtain
do

diff put
dp

Update diff
:diffupdate

'z' looks like a folded piece of paper, seen from the side
z像是折疊的書（從側邊看）
Open fold
zo 

Close fold
zc

Resize the width of the current window
[Ctrl]+w > 
先按組合鍵[ctrl]+w，再按一次>
[Ctrl]+w < 
[Ctrl]+w 10 > 
先按組合鍵[ctrl]+w，再按1, 0, >
[Ctrl]+w 10 > 

vimdiff cheat sheet
https://gist.github.com/mattratleph/4026987

請搭配git diff使用
https://github.com/wisdomsoar/hello-git/blob/master/git%20diff%20my%20vimdiff

View the full path of the file
press 1 followed by [Ctrl]+g

View filename
[Ctrl]+G

You can use the :resize (or :res) to change the height of the window.

To change the height to 60 rows, use:
:resize 60
You can also change the height in increments. 
To change the height by increments of 5, use:

:res +5
:res -5

You can use :vertical resize to change the width of the current window. 
To change the width to 80 columns, use:

:vertical resize 80
You can also change the width in increments. 
To change the width by increments of 5, use:

:vertical resize +5
:vertical resize -5

For a split window: 
Ctrl-w + and Ctrl-w - 
to resize the height of the current window by a single row


For a vsplit window: 
use Ctrl-w > and Ctrl-w < 
to resize the width of the current window by a single column. 

Additionally, these key combinations accept a count prefix so that you can change the window size in larger steps. 
[e.g. Ctrl-w 10 + increases the window size by 10 lines]

To resize all windows to equal dimensions based on their splits, you can use Ctrl-w =.

To increase a window to its maximum height, use Ctrl-w _.

To increase a window to its maximum width, use Ctrl-w |.

To resize in different steps, you can create maps that will adjust the window size differently. For example to increase the window size by a factor of 1.5 and decrease the window size by 0.67, you can map this:

nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

In Gvim and vim in terminals with mouse support, it is also possible to use the mouse to resize a window. Simply grab the statusline at the window border and drag it into the desired direction.

See alsoEdit



http://www.how-hard-can-it.be/advanced-vim/


better color style for vimdiff
vi ~/.vimrc
ref: https://github.com/joeytwiddle/vim-diff-traffic-lights-colors
" When using vimdiff or diff mode
highlight DiffAdd    term=bold         ctermbg=darkgreen ctermfg=white    cterm=bold guibg=DarkGreen  guifg=White    gui=bold
highlight DiffText   term=reverse,bold ctermbg=red       ctermfg=yellow   cterm=bold guibg=DarkRed    guifg=yellow   gui=bold
highlight DiffChange term=bold         ctermbg=black     ctermfg=white    cterm=bold guibg=Black      guifg=White    gui=bold
highlight DiffDelete term=none         ctermbg=darkblue  ctermfg=darkblue cterm=none guibg=DarkBlue   guifg=DarkBlue gui=none
if &background == "light"
	" Changes when bg=white fg=black
	highlight DiffAdd                   ctermfg=black cterm=bold guibg=green      guifg=black
	highlight DiffText   ctermbg=yellow ctermfg=red   cterm=bold guibg=yellow     guifg=red
	highlight DiffChange ctermbg=none   ctermfg=none  cterm=bold guibg=white      guifg=black
	highlight DiffDelete                                         guibg=lightblue  guifg=lightblue
endif

" When viewing a diff or patch file
highlight diffRemoved term=bold ctermbg=black   ctermfg=red    cterm=bold guibg=DarkRed     guifg=white gui=none
highlight diffAdded   term=bold ctermbg=black   ctermfg=green  cterm=bold guibg=DarkGreen   guifg=white gui=none
highlight diffChanged term=bold ctermbg=black   ctermfg=yellow cterm=bold guibg=DarkYellow  guifg=white gui=none
highlight diffLine    term=bold ctermbg=magenta ctermfg=white  cterm=bold guibg=DarkMagenta guifg=white gui=none
highlight diffFile    term=bold ctermbg=yellow  ctermfg=black  cterm=none guibg=DarkYellow  guifg=white gui=none
if &background == "light"
	" Changes when bg=white fg=black
	highlight diffRemoved cterm=none guibg=Red     guifg=black
	highlight diffAdded   cterm=none guibg=Green   guifg=black
	highlight diffChanged cterm=none guibg=Yellow  guifg=black
	highlight diffLine    cterm=none guibg=Magenta guifg=black
	highlight diffFile    cterm=none guibg=Yellow  guifg=black
endif


ANOTHER theme:
ref: https://bbs.archlinux.org/viewtopic.php?id=83689

" miromiro colours
" Author:  jason ryan
" URL:     http://jasonwryan.com

set background=dark
hi clear
if exists("syntax on")
    syntax reset
endif

let g:color_name="miromiro"
" Normal colors  --- 
hi Normal          ctermfg=15
hi Ignore          ctermfg=8
hi Comment         ctermfg=7 
hi LineNr          ctermfg=8
hi Float           ctermfg=3
hi Include         ctermfg=5
hi Define          ctermfg=2
hi Macro           ctermfg=13
hi PreProc         ctermfg=10
hi PreCondit       ctermfg=13
hi NonText         ctermfg=6
hi Directory       ctermfg=6
hi SpecialKey      ctermfg=11
hi Type            ctermfg=6
hi String          ctermfg=2
hi Constant        ctermfg=13
hi Special         ctermfg=10
hi SpecialChar     ctermfg=9
hi Number          ctermfg=14
hi Identifier      ctermfg=13
hi Conditional     ctermfg=14
hi Repeat          ctermfg=9
hi Statement       ctermfg=4
hi Label           ctermfg=13
hi Operator        ctermfg=3
hi Keyword         ctermfg=9   
hi StorageClass    ctermfg=11  
hi Structure       ctermfg=5
hi Typedef         ctermfg=6
hi Function        ctermfg=11
hi Exception       ctermfg=1
hi Underlined      ctermfg=4
hi Title           ctermfg=3   
hi Tag             ctermfg=11
hi Delimiter       ctermfg=12  
hi SpecialComment  ctermfg=9
hi Boolean         ctermfg=3
hi Todo            ctermfg=9
hi MoreMsg         ctermfg=13
hi ModeMsg         ctermfg=13
hi Debug           ctermfg=1
hi MatchParen      ctermfg=8    ctermbg=7
hi ErrorMsg        ctermfg=1    ctermbg=11
hi WildMenu        ctermfg=5    ctermbg=15
hi Folded          cterm=reverse ctermfg=6    ctermbg=0
hi Search          ctermfg=1    ctermbg=15
hi IncSearch       ctermfg=1    ctermbg=15
hi WarningMsg      ctermfg=9    ctermbg=15
hi Question        ctermfg=10   ctermbg=15
hi Pmenu           ctermfg=2    ctermbg=15
hi PmenuSel        ctermfg=1    ctermbg=15
hi Visual          ctermfg=8    ctermbg=15
hi StatusLine      ctermfg=0    ctermbg=7
hi StatusLineNC    ctermfg=8    ctermbg=0

" Specific for Vim script  --- 
hi vimCommentTitle ctermfg=10
hi vimFold         ctermfg=0    ctermbg=15

" Specific for help files  --- 
hi helpHyperTextJump ctermfg=11

" JS numbers only ---
hi javaScriptNumber ctermfg=11 

" Special for HTML ---
hi htmlTag        ctermfg=6   
hi htmlEndTag     ctermfg=6  
hi htmlTagName    ctermfg=11  

" Specific for Perl  --- 
hi perlSharpBang  ctermfg=10  term=standout
hi perlStatement  ctermfg=13
hi perlStatementStorage ctermfg=1
hi perlVarPlain   ctermfg=3
hi perlVarPlain2  ctermfg=11

" Specific for Ruby  --- 
hi rubySharpBang  ctermfg=10  term=standout

" Specific for diff  --- 
hi diffLine       ctermfg=10 
hi diffOldLine    ctermfg=2      
hi diffOldFile    ctermfg=2      
hi diffNewFile    ctermfg=2      
hi diffAdded      ctermfg=4 
hi diffRemoved    ctermfg=1        
hi diffChanged    ctermfg=6       

" Spell checking  --- 
if version >= 700
  hi clear SpellBad
  hi clear SpellCap
  hi clear SpellRare
  hi clear SpellLocal
  hi SpellBad    cterm=underline
  hi SpellCap    cterm=underline
  hi SpellRare   cterm=underline
  hi SpellLocal  cterm=underline
endif
" vim: foldmethod=marker foldmarker={{{,}}}:



